{"ast":null,"code":"import axios from \"axios\";\nimport { POST_SUCCESS, POST_FAIL, GET_SUCCESS, GET_FAIL, USER_AUTH_SUCCESS, USER_AUTH_FAIL, USER_LOGOUT_FAIL } from \"../constants/exampleConstants\";\nimport { push } from \"connected-react-router\";\n\nconst postExampleAction = (title, body, userId) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"https://jsonplaceholder.typicode.com/posts\", {\n      title: title,\n      body: body,\n      userId: userId\n    });\n    console.log(\"post action\", data);\n    dispatch({\n      type: POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst getExampleAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n    console.log(\"get action\", data);\n    dispatch({\n      type: GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst putExampleAction = (userName, name, email, password) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      userName,\n      name,\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response.data\n    });\n  }\n};\n\nconst deleteExampleAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/users/user\");\n    dispatch({\n      type: USER_AUTH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: error.response.data\n    });\n  }\n};\n\nexport { postExampleAction, getExampleAction, putExampleAction, deleteExampleAction };","map":{"version":3,"sources":["/home/euler/Documents/EgitimModulu/frontend/src/actions/exampleActions.js"],"names":["axios","POST_SUCCESS","POST_FAIL","GET_SUCCESS","GET_FAIL","USER_AUTH_SUCCESS","USER_AUTH_FAIL","USER_LOGOUT_FAIL","push","postExampleAction","title","body","userId","dispatch","data","post","console","log","type","payload","error","getExampleAction","get","putExampleAction","userName","name","email","password","withCredentials","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","response","deleteExampleAction"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  POST_SUCCESS,\n  POST_FAIL,\n  GET_SUCCESS,\n  GET_FAIL,\n  USER_AUTH_SUCCESS,\n  USER_AUTH_FAIL,\n  USER_LOGOUT_FAIL,\n} from \"../constants/exampleConstants\";\nimport { push } from \"connected-react-router\";\nconst postExampleAction = (title, body, userId) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\n      \"https://jsonplaceholder.typicode.com/posts\",\n      {\n        title: title,\n        body: body,\n        userId: userId,\n      }\n    );\n    console.log(\"post action\", data)\n    dispatch({ type: POST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: POST_FAIL, payload: error });\n  }\n};\n\nconst getExampleAction = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n    console.log(\"get action\", data)\n    dispatch({ type: GET_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: GET_FAIL, payload: error });\n  }\n};\n\nconst putExampleAction = (userName, name, email, password) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\n      \"/api/users/register\",\n      { userName, name, email, password },\n      {\n        withCredentials: true,\n      }\n    );\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response.data,\n    });\n  }\n};\n\nconst deleteExampleAction = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\"/api/users/user\");\n    dispatch({ type: USER_AUTH_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: USER_AUTH_FAIL, payload: error.response.data });\n  }\n};\nexport { postExampleAction, getExampleAction, putExampleAction, deleteExampleAction };\n"]},"metadata":{},"sourceType":"module"}